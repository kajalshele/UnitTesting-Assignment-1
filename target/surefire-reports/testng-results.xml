<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="4" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-04-21T12:20:50 IST" name="StringTestCases" finished-at="2021-04-21T12:20:50 IST" duration-ms="187">
    <groups>
      <group name="SmokeTest">
        <method signature="TestCase.concatWithString(java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" name="concatWithString" class="QualityKioskTraining.StringTesting.TestCase"/>
      </group> <!-- SmokeTest -->
    </groups>
    <test started-at="2021-04-21T12:20:50 IST" name="StringConcatenationTestCases" finished-at="2021-04-21T12:20:50 IST" duration-ms="187">
      <class name="QualityKioskTraining.StringTesting.TestCase">
        <test-method is-config="true" signature="createResultFolder(java.lang.String)[pri:0, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" started-at="2021-04-21T12:20:49 IST" name="createResultFolder" finished-at="2021-04-21T12:20:50 IST" duration-ms="78" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[new2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResultFolder -->
        <test-method is-config="true" signature="init()[pri:0, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" started-at="2021-04-21T12:20:50 IST" name="init" finished-at="2021-04-21T12:20:50 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method is-config="true" signature="reinitialisedResultVar()[pri:0, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" started-at="2021-04-21T12:20:50 IST" name="reinitialisedResultVar" finished-at="2021-04-21T12:20:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reinitialisedResultVar -->
        <test-method signature="concatNullString()[pri:0, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" started-at="2021-04-21T12:20:50 IST" name="concatNullString" finished-at="2021-04-21T12:20:50 IST" duration-ms="13" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Not a String value] but found [null null]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Not a String value] but found [null null]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at QualityKioskTraining.StringTesting.TestCase.concatNullString(TestCase.java:59)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:64)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:564)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- concatNullString -->
        <test-method is-config="true" signature="reinitialisedResultVar()[pri:0, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" started-at="2021-04-21T12:20:50 IST" name="reinitialisedResultVar" finished-at="2021-04-21T12:20:50 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reinitialisedResultVar -->
        <test-method signature="concatWithString(java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" started-at="2021-04-21T12:20:50 IST" name="concatWithString" data-provider="testCaseData" finished-at="2021-04-21T12:20:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[kajal]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[shele]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[kajal shele]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- concatWithString -->
        <test-method is-config="true" signature="reinitialisedResultVar()[pri:0, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" started-at="2021-04-21T12:20:50 IST" name="reinitialisedResultVar" finished-at="2021-04-21T12:20:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reinitialisedResultVar -->
        <test-method signature="concatWithString(java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" started-at="2021-04-21T12:20:50 IST" name="concatWithString" data-provider="testCaseData" finished-at="2021-04-21T12:20:50 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[Raj]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Shelke]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Raj Shelke]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- concatWithString -->
        <test-method is-config="true" signature="reinitialisedResultVar()[pri:0, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" started-at="2021-04-21T12:20:50 IST" name="reinitialisedResultVar" finished-at="2021-04-21T12:20:50 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- reinitialisedResultVar -->
        <test-method signature="concatNumbers()[pri:2, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" started-at="2021-04-21T12:20:50 IST" name="concatNumbers" finished-at="2021-04-21T12:20:50 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- concatNumbers -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" started-at="2021-04-21T12:20:50 IST" name="tearDown" finished-at="2021-04-21T12:20:50 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="copyReportFile(java.lang.String)[pri:0, instance:QualityKioskTraining.StringTesting.TestCase@5db45159]" started-at="2021-04-21T12:20:50 IST" name="copyReportFile" finished-at="2021-04-21T12:20:50 IST" duration-ms="20" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[new2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- copyReportFile -->
      </class> <!-- QualityKioskTraining.StringTesting.TestCase -->
    </test> <!-- StringConcatenationTestCases -->
  </suite> <!-- StringTestCases -->
</testng-results>
